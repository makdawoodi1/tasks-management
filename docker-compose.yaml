version: "3.9"

services:
  frontend:
    container_name: frontend
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.local
    restart: always
    env_file: .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - "./packages/frontend/src:/usr/src/app/src"
    networks:
      - bp-network
    command: "npm start"

  backend:
    container_name: backend
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.local
    restart: always
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./packages/backend:/svr/app
      - "./scripts/wait.sh:/wait.sh"
      - /svr/app/node_modules
    networks:
      - bp-network
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - bp_pg_db
    links:
      - bp_pg_db

  bp_pg_db:
      image: postgres:12-alpine
      restart: always
      container_name: bp-pg-db
      env_file:
        - .env
      environment:
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        PGDATA: /var/lib/postgresql/data
        POSTGRES_USER: ${DB_USER}
        POSTGRES_DB: ${DB_NAME}
      ports:
        - "${DB_PORT}:${DB_PORT}"
      volumes:
        - pgdata:/var/lib/postgresql/data
      networks:
        - bp-network

  pgadmin_portal:
      image: dpage/pgadmin4
      restart: always
      container_name: pgadmin_portal
      env_file:
        - .env
      environment:
        PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
        PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      volumes:
        - pgadmin:/root/.pgadmin
      ports:
        - "${PGADMIN_PORT}:80"
      depends_on:
        - bp_pg_db
      networks:
        - bp-network

volumes:
  pgdata:
  pgadmin:

networks:
  bp-network:
    driver: bridge